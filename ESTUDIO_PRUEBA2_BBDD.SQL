-- EJERCICIO 1
SELECT
    CASE
    WHEN SUM(VENTA.PRECIO_VENTA) IS NULL THEN NVL(SUM(VENTA.PRECIO_VENTA), 0)
    ELSE SUM(VENTA.PRECIO_VENTA)
    END "SUMA_VENTAS",
    CASE 
    WHEN SUM(VENTA.PRECIO_VENTA) >= 50000000 THEN (VEND.SUELDO_BRUTO * 0.30)
    WHEN SUM(VENTA.PRECIO_VENTA) < 50000000 THEN (VEND.SUELDO_BRUTO * 0.15)
    WHEN NVL(SUM(VENTA.PRECIO_VENTA), 0) = 0 THEN 0
    END "MONTO_BONO",
    VEND.VENDEDOR_ID
FROM VENTA
FULL JOIN VENDEDOR VEND ON VEND.VENDEDOR_ID = VENTA.FK_VENDEDOR_ID
GROUP BY VEND.VENDEDOR_ID, VEND.SUELDO_BRUTO
ORDER BY VEND.VENDEDOR_ID ASC;

DECLARE
V_SUMA_VENTAS NUMBER(10);
V_MONTO_BONO NUMBER(10);
V_ID_EMPLEADO VENDEDOR.VENDEDOR_ID%TYPE;
CURSOR CUR_BONO_EMP IS
        SELECT
        CASE
        WHEN SUM(VENTA.PRECIO_VENTA) IS NULL THEN NVL(SUM(VENTA.PRECIO_VENTA), 0)
        ELSE SUM(VENTA.PRECIO_VENTA)
        END "SUMA_VENTAS",
        CASE 
        WHEN SUM(VENTA.PRECIO_VENTA) >= 50000000 THEN (VEND.SUELDO_BRUTO * 0.30)
        WHEN SUM(VENTA.PRECIO_VENTA) < 50000000 THEN (VEND.SUELDO_BRUTO * 0.15)
        WHEN NVL(SUM(VENTA.PRECIO_VENTA), 0) = 0 THEN 0
        END "MONTO_BONO",
        VEND.VENDEDOR_ID
    FROM VENTA
    FULL JOIN VENDEDOR VEND ON VEND.VENDEDOR_ID = VENTA.FK_VENDEDOR_ID
    GROUP BY VEND.VENDEDOR_ID, VEND.SUELDO_BRUTO
    ORDER BY VEND.VENDEDOR_ID ASC;
BEGIN
    
    OPEN CUR_BONO_EMP;
        LOOP
            FETCH CUR_BONO_EMP INTO V_SUMA_VENTAS, V_MONTO_BONO, V_ID_EMPLEADO;
            EXIT WHEN CUR_BONO_EMP%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(V_SUMA_VENTAS || ' ' || V_MONTO_BONO || ' ' || V_ID_EMPLEADO);
            INSERT INTO BONO_VENDEDOR VALUES (V_SUMA_VENTAS, V_MONTO_BONO, V_ID_EMPLEADO);
        END LOOP;
    CLOSE CUR_BONO_EMP;
END;

SELECT * FROM BONO_VENDEDOR ORDER BY FK_VENDEDOR_ID ASC;

-- EJERCICIO 2
DECLARE
V_VENDEDOR_ID SUELDOS.VENDEDOR_ID%TYPE;
V_VENDEDOR_NOMBRE SUELDOS.VENDEDOR_NOMBRE%TYPE;
V_SUELDO_BRUTO SUELDOS.SUELDO_BRUTO%TYPE;
V_BONO_VENTAS SUELDOS.BONO_VENTAS%TYPE;
V_BONO_EDAD SUELDOS.BONO_EDAD%TYPE;
V_DESCUENTO_AFP SUELDOS.DESCUENTO_AFP%TYPE;
V_DESCUENTO_ISAPRE SUELDOS.DESCUENTO_ISAPRE%TYPE;
V_BONO_MOV_COL SUELDOS.BONO_MOV_COL%TYPE;
V_SUELDO_LIQUIDO SUELDOS.SUELDO_LIQUIDO%TYPE;

-- CURSOR
CURSOR CUR_SUELDO_LIQ IS
    SELECT
        VEND.VENDEDOR_ID,
        VEND.VENDEDOR_NOMBRE,
        VEND.SUELDO_BRUTO,
        BON.MONTO_BONO,
        DESCT.PORC_DESCTO_AFP,
        DESCTSAL.PORC_DESCTO_SALUD,
        CASE
        WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_CONTRATO)/12) >= 5 THEN 120000
        WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_CONTRATO)/12) < 5 THEN 80000
        END "BONO_MOV_COL",
        CASE 
        WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_CONTRATO)/12) >= 5
            THEN (VEND.SUELDO_BRUTO - (VEND.SUELDO_BRUTO * DESCT.PORC_DESCTO_AFP/100) - (VEND.SUELDO_BRUTO * DESCTSAL.PORC_DESCTO_SALUD/100) + 120000) 
        WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_CONTRATO)/12) < 5
            THEN (VEND.SUELDO_BRUTO - (VEND.SUELDO_BRUTO * DESCT.PORC_DESCTO_AFP/100) - (VEND.SUELDO_BRUTO * DESCTSAL.PORC_DESCTO_SALUD/100) + 80000) 
        END "SUELDO LIQUIDO"
    FROM VENDEDOR VEND
    JOIN DESCUENTO_AFP DESCT ON VEND.FK_COD_AFP = DESCT.COD_AFP
    JOIN DESCUENTO_SALUD DESCTSAL ON VEND.FK_COD_SALUD = DESCTSAL.COD_SALUD
    JOIN BONO_VENDEDOR BON ON VEND.VENDEDOR_ID = BON.FK_VENDEDOR_ID;  
BEGIN
END;

-- SELECT PARA HACER EL CALCULO DEL BONO POR EDAD
SELECT 
    VEND.VENDEDOR_ID,
    VEND.VENDEDOR_FECHA_NACIMIENTO,
    TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_NACIMIENTO)/12) "EDAD",
    CASE
    WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_NACIMIENTO)/12) >= EDAD.RANGO_INFERIOR AND 
        TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_NACIMIENTO)/12) < EDAD.RANGO_SUPERIOR 
        THEN (EDAD.RANGO_INFERIOR || ' ' || EDAD.RANGO_SUPERIOR || ' ' || TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_NACIMIENTO)/12))
    END "RANGOS Y EDAD",
    CASE 
    WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_NACIMIENTO)/12) >= EDAD.RANGO_INFERIOR
    AND TRUNC(MONTHS_BETWEEN(SYSDATE, VEND.VENDEDOR_FECHA_NACIMIENTO)/12) < EDAD.RANGO_SUPERIOR
        THEN (VEND.SUELDO_BRUTO * EDAD.PORC_EDAD/100)
    END "BONO EDAD"
FROM VENDEDOR VEND, EDAD;